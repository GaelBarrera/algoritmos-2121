ejersicio 1
class program {

     void regresa(){
      turnleft();
      turnleft();
      while(frontIsClear){
       move();
      }

      while(anyBeepersInBeeperBag){
      putbeeper();
        }
  }

     void recoge(){
     while(nextToABeeper){
     pickbeeper();
         }
     }

     void amontona(){
     while(nextToABeeper && frontIsClear){
     recoge();
     move();


     if(frontIsBlocked || notNextToABeeper){
     recoge();
     regresa();
     turnleft();
     if(frontIsBlocked && facingEast){
     turnoff();
         }
     move();
     turnleft();

         }
       }
}

 program(){
 amontona();
 turnoff();

 }
 }

 ejersicio 2
 class program {
void regresa(){
turnleft();
turnleft();
 while(frontIsClear){
 move();
 }
}
void recoge(){
 while(nextToABeeper){
  pickbeeper();
 }
}
void amontona(){
 iterate (20){
  recoge();
  while(frontIsClear){
  move();
  recoge();
  }
if(frontIsBlocked){
  recoge();
  regresa();
  turnleft();
if(facingEast || frontIsBlocked){
  iresquina();
if(frontIsClear){
 move();
  turnleft(); }
       }
    }
  }
}
void iresquina(){
while(facingEast && frontIsBlocked){
   turnleft();
   turnleft();
while(frontIsClear){
   move();
   }
while(frontIsBlocked && anyBeepersInBeeperBag){
  putbeeper();
while(noBeepersInBeeperBag){
  turnoff();
      }
    }
  }
}
program() {
     ;
     amontona();
    turnoff();
 }
}
ejersicio 3
class program{
  void aOrientacion()
  {
  while(notFacingEast){
  turnleft();
  }
  }

  void pickCarrot()
  {
  while(nextToABeeper)
  {
  pickbeeper();
  }
  }

  void turnRight()
  {
  iterate(3)
  {
  turnleft();
  }
  }

  void goToField()
  {
  turnleft();
   turnleft();
   move();
   turnRight();
  move();
  while(rightIsBlocked)
  { move();
  }
  turnRight();
  move();
  turnRight();
  while(frontIsClear)
  {
  move();
  }
  turnleft();
  turnleft ();
  }

  void sembrar()
  {
  while(anyBeepersInBeeperBag)
  {
  if(frontIsClear)
  {
  putbeeper();
  move();
  }
  if(frontIsBlocked && leftIsBlocked && facingSouth)
  {
  putbeeper();
  turnoff();
  }
  if(frontIsBlocked && rightIsBlocked && facingNorth)
  {
  putbeeper();
  turnoff();
  }
  if(frontIsBlocked && facingNorth && rightIsClear)
  {
  putbeeper();
  turnRight();
  move();
  turnRight();
  }
   if(frontIsBlocked && facingSouth)
   {
   putbeeper();
   turnleft();
   move();
   turnleft();
   }
  }
  }
  program () {
  aOrientacion();
  move();
  pickCarrot();
  goToField();
  sembrar();
  }
  }
  ejersicio 4 
  class program {
void build(){
 while(!facingEast){
    turnleft();
    }
    while(!nextToABeeper && anyBeepersInBeeperBag){
    putbeeper();
    if(frontIsClear){
    move();
    }
    if(frontIsBlocked){
    if(!nextToABeeper){
    putbeeper();
    }
    while(!facingNorth){
    turnleft();
    }
    move();
    while(!facingWest){
    turnleft();
    }
    while(frontIsClear){
    move();
    }
    build();
    }
    }
}

void pick(){
 while(!facingNorth){
    turnleft();
    }
 while(nextToABeeper){
 pickbeeper();
 if(frontIsClear){
 move();
 }
 }
 while(!facingSouth){
    turnleft();
    }
    while(frontIsClear){
    move();
    }
    while(!facingEast){
    turnleft();
    }
    if(frontIsClear){
    move();
    pick();
    }
    while(!facingWest){
    turnleft();
    }
    while(frontIsClear){
    move();
    }
    build();
}
    program () {
        pick();
        turnoff();
    }
}
ejersicio 5
class program{
void norte() {  while (notFacingNorth) { turnleft (); } }
void sur() {  while (notFacingSouth) { turnleft (); } }
void este() {  while (notFacingEast) { turnleft (); } }
void oeste() {  while (notFacingWest) { turnleft (); } }
void derecha () { iterate (3) { turnleft (); }}

void recoger () { while (nextToABeeper) { pickbeeper (); } }
void dejar () {  if (anyBeepersInBeeperBag) { putbeeper (); } }
void mediavuelta (){ turnleft (); turnleft (); }

void inicia() { if (anyBeepersInBeeperBag) { dejar (); move (); derecha ();  move();
if (facingEast) { dejar (); sur (); move ();
while (frontIsBlocked&&facingSouth) { dejar (); mediavuelta ();
while (frontIsClear&&nextToABeeper) { move ();
if(notNextToABeeper){ derecha (); move(); sur ();
while  (frontIsClear) { dejar(); move ();
}}}}}}}


program() {
inicia();

turnoff();
}
}